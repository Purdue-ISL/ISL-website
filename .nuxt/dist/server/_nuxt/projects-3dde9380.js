import { _ as __nuxt_component_0 } from "./HeaderNav-c8a58f8a.js";
import { _ as __nuxt_component_1 } from "./PageHeader-6cc8daac.js";
import { mergeProps, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrInterpolate, ssrRenderComponent } from "vue/server-renderer";
import { _ as _export_sfc } from "../server.mjs";
import "./nuxt-link-7a607302.js";
import "ufo";
import "hookable";
import "ofetch";
import "#internal/nitro";
import "unctx";
import "vue-router";
import "h3";
import "devalue";
import "@unhead/ssr";
import "unhead";
import "@unhead/shared";
import "destr";
import "klona";
import "defu";
const _sfc_main$1 = {
  __name: "project",
  __ssrInlineRender: true,
  props: ["title", "content"],
  setup(__props) {
    return (_ctx, _push, _parent, _attrs) => {
      _push(`<div${ssrRenderAttrs(mergeProps({ class: "project-container-div" }, _attrs))}><h1 class="font-bold px-6 py-4 text-center">${ssrInterpolate(__props.title)}</h1><p class="px-6 pb-6 text-justify">${ssrInterpolate(__props.content)} <span class="project-more"> ... more</span></p></div>`);
    };
  }
};
const _sfc_setup$1 = _sfc_main$1.setup;
_sfc_main$1.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/projects/project.vue");
  return _sfc_setup$1 ? _sfc_setup$1(props, ctx) : void 0;
};
const __nuxt_component_2 = _sfc_main$1;
let projects_divs = [];
const _sfc_main = {
  methods: {
    overlap(element) {
      let topOverlap = (window.screen.height - element.getBoundingClientRect().top) / window.screen.height;
      if (topOverlap > 0.1) {
        element.classList.toggle("show-up");
        return true;
      }
      return false;
    },
    handleScroll() {
      var filtered = [];
      for (var idx in projects_divs) {
        if (this.overlap(projects_divs[idx])) {
          filtered.push(idx);
        }
      }
      for (var idx in filtered) {
        delete projects_divs[filtered[idx]];
      }
      if (Object.keys(projects_divs).length == 0) {
        window.removeEventListener("scroll", this.handleScroll);
      }
    }
  },
  mounted() {
    window.scrollTo(0, 0);
    projects_divs = [];
    let projects_divs_nodelist = document.querySelectorAll(
      ".project-container-div"
    );
    projects_divs_nodelist.forEach((projects_div) => {
      projects_divs.push(projects_div);
      if (projects_div.classList.contains("show-up")) {
        projects_div.classList.toggle("show-up");
      }
    });
    window.addEventListener("scroll", this.handleScroll);
    this.handleScroll();
  }
};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_HeaderNav = __nuxt_component_0;
  const _component_PageHeader = __nuxt_component_1;
  const _component_ProjectsProject = __nuxt_component_2;
  _push(`<div${ssrRenderAttrs(mergeProps({
    id: "doc",
    class: "bg-[var(--primary-color)] bg-img"
  }, _attrs))}><div class="limit-width">`);
  _push(ssrRenderComponent(_component_HeaderNav, null, null, _parent));
  _push(`</div>`);
  _push(ssrRenderComponent(_component_PageHeader, { title: "Projects" }, null, _parent));
  _push(`<div class="limit-width"><div class="w-[96%] mx-auto"><h1 class="md:pt-20 pt-10 pb-6 text-center font-semibold text-3xl text-slate-600"> Ongoing Projects </h1><div class="projects-container">`);
  _push(ssrRenderComponent(_component_ProjectsProject, {
    title: "Synthesizing network designs with certifiable performance properties",
    content: "Network design is ad-hoc today, and validating the design normally comes as an afterthought. Unlike the chip and software industry, where design and verification tools form a multi-billion dollar industry, network design and verification is still at an early stage. We are exploring approaches to synthesizing network designs with formally certifiable performance properties under failures. The work may be viewed as an early step towards verifying quanititative network properties."
  }, null, _parent));
  _push(ssrRenderComponent(_component_ProjectsProject, {
    title: "Next Generation Multi-Perspective Video Delivery at Internet Scale",
    content: "The success of streaming video has generated interest in newer forms of multi-perspective video content, such as those generated by 360-degree cameras, multi-angle camera arrays, or light-field cameras. The immersive experience provided by these cameras can enhance user satisfaction. This project explores architectural enhancements, algorithms, and techniques to deliver multi-perspective video at Internet-scale."
  }, null, _parent));
  _push(ssrRenderComponent(_component_ProjectsProject, {
    title: "A Program Synthesis Approach to Designing Networks with Indeterminate Objectives",
    content: "Computer networks are difficult to manage since there exists a wide gulf between the high-level goals that operators have for their networks and the low-level decisions that operators should make. This project develops a novel framework that we term comparative synthesis (inspired by program synthesis from the Programming Language community), where a user's design objective, and the synthesis of a network design that optimizes that objective are done in tandem."
  }, null, _parent));
  _push(ssrRenderComponent(_component_ProjectsProject, {
    title: "ML and Data-Driven Optimization of Internet Video Delivery from the Network Edge",
    content: "Video dominates the Internet today, accounting for over 80% of Internet traffic by some estimates. A key challenge is delivering high quality Internet video over variable Internet environments. In this project, we are investigating whether high Quality of Experience can be enabled for Internet video by leveraging ML-frameworks at the network edge. Our work extensively uses insights from real-world data sets of Internet video sessions."
  }, null, _parent));
  _push(ssrRenderComponent(_component_ProjectsProject, {
    title: "Causal ML models for Data-Driven Networking",
    content: "A central theme of data-driven networking is answering what-if questions -- what would be the impact of changing the design of a networked system, given data obtained from a real-world deployment of an existing system. In this project, we are investigating the use of causal reasoning approaches to answer “what-if questions” using data collected from prior deployments of systems."
  }, null, _parent));
  _push(`</div></div></div><div class="pb-[150px]"></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/projects.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const projects = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  projects as default
};
//# sourceMappingURL=projects-3dde9380.js.map
