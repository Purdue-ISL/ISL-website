import{_ as h}from"./HeaderNav.448f5d8f.js";import{_ as g}from"./PageHeader.6a53c222.js";import{_ as u}from"./SubPageNav.27081931.js";import{_ as f,a as m}from"./separator.dcc3680f.js";import{_ as v,c as _,a as e,b as a,d as o,f as b,o as w}from"./entry.00071329.js";import"./nuxt-link.b7241ec1.js";import"./_commonjsHelpers.725317a4.js";let n=[];const y={beforeRouteEnter(s,t,i){console.log(t),console.log(s),s.params.link=t,i()},methods:{overlap(s,t){return(window.screen.height-s.getBoundingClientRect().top)/window.screen.height>t},handleScroll(){var s=[];for(var t in n)this.overlap(n[t],.1)&&(n[t].classList.toggle("show-up"),s.push(t));for(var t in s)delete n[s[t]];Object.keys(n).length==0&&(console.log("removed"),window.removeEventListener("scroll",this.handleScroll))}},mounted(){window.scrollTo(0,0),n=[],document.querySelectorAll(".subpages-section-container-div").forEach(t=>{n.push(t),t.classList.contains("show-up")&&t.classList.toggle("show-up")}),window.addEventListener("scroll",this.handleScroll),this.handleScroll()}},k={id:"doc",class:"bg-[var(--primary-color)] bg-img min-h-screen"},x={class:"limit-width"},P={class:"limit-width"},S=e("div",{class:"w-[96%] mx-auto"},null,-1),j=e("h1",{class:"subpages-title"}," A Program Synthesis Approach to Designing Networks with Provable Properties ",-1),N=e("div",{id:"des",class:"subpages-section-container-div"},[e("div",{class:"subpages-section-title-container-div"},[e("h1",{class:"subpages-section-title"},"Description")]),e("div",{class:"subpages-section-content"},[e("p",null,[o(" Computer networks are difficult to manage since there exists a wide gulf between the high-level goals that operators have for their networks (e.g., Quality of Service etc.), and the low-level decisions that operators should make (e.g., how to route traffic, allocate bandwidth, configure devices etc.). While the advent of Software-Defined Networking helps, the process of designing networks is still ad-hoc, leading to high operational costs, design faults that account for a large fraction of network downtime, and costly security breaches. This project is motivated by the vision of design automation for networking, inspired by the success of the approach in other domains such as chip design. The project is developing methods for network architects to express their intent at higher levels of abstraction, and techniques to automatically synthesize network designs that realize this intent correctly and efficiently. "),e("br"),o(),e("br"),o(` As a concrete example, we have tackled a key challenge network architects encounter: how to balance multiple conflicting metrics, and ensure fair allocations to competing traffic while prioritizing critical traffic. The state of practice poses challenges since architects must precisely encode their (somewhat fuzzy) intent into formal optimization models using abstract notions such as utility functions, and ad-hoc manually tuned knobs. We have developed one of the first efforts to synthesize network designs with indeterminate objectives using an interactive program-synthesis-based approach. Specifically, we have developed a novel framework that we term comparative synthesis, where a user's design objective, and the synthesis of a network design that optimizes that objective are done in tandem. Our work is based on the key insight that when a user has difficulty in providing a concrete objective function, it is relatively easy and natural to give preferences between pairs of concrete candidates. The approach may be viewed as a new variant of programming-by-example (PBE) widely studied in the Programming Languages community, where preference pairs are used as "examples" instead of input-output pairs in traditional PBE systems. We have developed Net10Q, a system based on our approach, and evaluated its effectiveness on real-world network case studies, and through pilot user studies comprising network researchers and practitioners. `),e("br"),o(),e("br"),o(" More recently, we have started exploring program synthesis approaches for data plane forwarding in the context of the P4 programming language ")])])],-1),L={id:"pub",class:"subpages-section-container-div"},C=e("div",{class:"subpages-section-title-container-div"},[e("h1",{class:"subpages-section-title"},"Publications")],-1),D={class:"subpages-section-content"},A=b('<div id="ppl" class="subpages-section-container-div"><div class="subpages-section-title-container-div"><h1 class="subpages-section-title">Team</h1></div><div class="subpages-section-content"><div><span class="font-bold text-xl">Faculty</span><div class="text-lg pl-2"><ul class="gap-10"><li class="font-mono tracking-tighter">Prof. Sanjay Rao</li></ul></div></div><br><div><span class="font-bold text-xl">Students</span><div class="text-lg pl-2"><ul class="gap-10"><li><span class="font-mono tracking-tighter"> Chenan Wen </span><span>— Ph.D. student</span></li><li><span class="font-mono tracking-tighter"> Syed Usman Jafri </span><span> — Ph.D. student</span></li><li><span class="font-mono tracking-tighter"> Zhuocong Li </span><span> — Undergraduate student</span></li></ul></div></div><br><div><span class="font-bold text-xl">Graduated Students</span><div class="text-lg pl-2"><ul class="gap-10"><li><span class="font-mono tracking-tighter"> Chuan Jiang </span><span>— Ph.D.</span></li><li><span class="font-mono tracking-tighter"> Yanjun Wang </span><span> — Ph.D.</span></li><li><span class="font-mono tracking-tighter"> Zixuan Li </span><span> — MS</span></li></ul></div></div><br><div><span class="font-bold text-xl">Collaborators</span><div class="text-lg pl-2"><ul class="gap-10"><li><span class="font-mono tracking-tighter">Prof. Xiaokang Qiu</span><span> — Purdue University</span></li></ul></div></div><br></div></div>',1),z=e("div",{class:"pb-[30px]"},null,-1);function T(s,t,i,W,E,B){const l=h,p=g,d=u,r=f,c=m;return w(),_("div",k,[e("div",x,[a(l)]),a(p,{title:"Projects"}),e("div",P,[S,j,a(d,{data:[["Description","des"],["Publications","pub"],["People","ppl"]]}),N,e("div",L,[C,e("div",D,[e("p",null,[a(r,{title:"Comparative Synthesis: Learning Near-Optimal Network Designs by Query",authors:"Yanjun Wang, Chuan Jiang, Zixuan Li, Xiaokang Qiu, Sanjay Rao",conference:"Proceedings of the ACM on Programming Languages, 2023",paper:"https://dl.acm.org/doi/pdf/10.1145/3571197"}),a(c),a(r,{title:"Learning Network Design Objectives Using A Program Synthesis Approach",authors:"Yanjun Wang, Chuan Jiang, Xiaokang Qiu, Sanjay G. Rao",conference:"Proceedings of the 18th ACM Workshop on Hot Topics in Networks (HotNets), 2019",paper:"../papers/HotNets_2019_Paper.pdf"}),a(c)])])]),A]),z])}const U=v(y,[["render",T]]);export{U as default};
